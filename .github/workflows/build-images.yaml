# yamllint disable rule:line-length
---
name: Images

on:  # yamllint disable-line rule:truthy
  # Allow manual runs.
  workflow_dispatch:
  # Also run on updates to this repo.
  push:
    branches:
      - main
    paths:
      - '*.sh'
      - 'distrib-tmpl/**'
      - 'Dockerfile'
      - 'hercules/**'
      - '.gitmodules'
  pull_request:
    branches:
      - main
    paths:
      - '*.sh'
      - 'distrib-tmpl/**'
      - 'Dockerfile'
      - 'hercules/**'
      - '.gitmodules'

env:
  PLATFORMS: linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64
  PUSH_IMAGE: ${{ github.ref == 'refs/heads/main' }}
  BUILD_RELEASE: true

jobs:
  build-hercules:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        HERCULES_SERVER_MODE: ["classic", "renewal"]
        HERCULES_PACKET_VERSION: ["20180418", "latest"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Get latest release tag
        run: |
          cd hercules
          HERCULES_VERSION=$(basename $(curl -fs -o/dev/null -w %{redirect_url}\
            https://github.com/HerculesWS/Hercules/releases/latest))
          HERCULES_REVISION=$(git show-ref --dereference --tags -s \
            refs/tags/$HERCULES_VERSION)
          echo "HERCULES_VERSION=${HERCULES_VERSION}" >> $GITHUB_ENV
          echo "HERCULES_REVISION=${HERCULES_REVISION}" >> $GITHUB_ENV
          git checkout ${HERCULES_VERSION}

      - name: Get Hercules packet version
        run: |
          if [[ ${{ matrix.HERCULES_PACKET_VERSION }} == "latest" ]]; then
            PACKETVER=$(sed -n -e 's/^.*#define PACKETVER \(.*\)/\1/p' hercules/src/common/mmo.h)
          else
            PACKETVER=${{ matrix.HERCULES_PACKET_VERSION }}
          fi
          echo "HERCULES_PACKETVER=$PACKETVER" >> $GITHUB_ENV

      - name: Check whether latest release needs building
        if: ${{ env.PUSH_IMAGE == 'true' }}
        run: |
          if [[ ${{ github.event_name }} == "workflow_dispatch" ]]; then
              echo "Workflow triggered manually; building container."
              echo "BUILD_RELEASE=true" >> $GITHUB_ENV
              exit
          fi
          # Check whether there already is a Docker image for the current tag
          SERVER_TAGS=$(curl -s "https://ghcr.io/v2/${{ github.repository_owner }}/hercules-${{ matrix.HERCULES_SERVER_MODE }}-packetver${{ env.HERCULES_PACKETVER }}/tags/list" | jq -r ".tags[]") || SERVER_TAGS="none"
          for tag in ${SERVER_TAGS[@]}; do
            if [[ "$tag" == "${HERCULES_VERSION}" ]]; then
              echo "Release ${tag} has already been built."
              echo "BUILD_RELEASE=false" >> $GITHUB_ENV
              exit
            fi
          done

      - name: Set up QEMU for Docker
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker metadata
        if: ${{ env.BUILD_RELEASE == 'true' }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/hercules-${{ matrix.HERCULES_SERVER_MODE }}-packetver${{ env.HERCULES_PACKETVER }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.HERCULES_VERSION }}
          labels: |
            org.opencontainers.image.title=Hercules ${{ env.HERCULES_VERSION }} (${{ matrix.HERCULES_SERVER_MODE }}, packet version ${{ env.HERCULES_PACKETVER }})
            org.opencontainers.image.description=A Dockerised Linux build of the Ragnarok Online server emulator Hercules, based on `debian:bullseye-slim`.
            org.opencontainers.image.vendor=Florian Piesche <florian@yellowkeycard.net>
            org.opencontainers.image.authors=Florian Piesche <florian@yellowkeycard.net>
            org.opencontainers.image.version=${{ env.HERCULES_VERSION }}
            org.opencontainers.image.revision=${{ env.HERCULES_REVISION }}
            org.opencontainers.image.licenses=GPL-3.0

      - name: Build and publish images
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          push: ${{ env.PUSH_IMAGE }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.PLATFORMS }}
          build-args: |
            HERCULES_SERVER_MODE=${{ matrix.HERCULES_SERVER_MODE }}
            HERCULES_PACKET_VERSION=${{ matrix.HERCULES_PACKET_VERSION }}
            HERCULES_RELEASE=${{ env.HERCULES_VERSION }}
